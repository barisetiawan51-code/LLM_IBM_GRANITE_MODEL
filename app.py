# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p9xNCv4BP_sCdS0HmjTxPu-KMzmaeb27
"""

import os
import streamlit as st
import pandas as pd
from langchain_community.llms import Replicate
from langchain_experimental.agents import create_pandas_dataframe_agent

# ======================================
# 1. Ambil API Token dari environment
# ======================================
from dotenv import load_dotenv
load_dotenv("/content/drive/MyDrive/CapstoneProjectHactiv8/.env")  # baca file .env

import os
replicate_token = os.getenv("REPLICATE_API_TOKEN")
if not replicate_token:
    raise ValueError("‚ùå REPLICATE_API_TOKEN tidak ditemukan. Pastikan sudah diset di .env")


# ======================================
# 2. Load dataset
# ======================================
@st.cache_data
def load_data():
    data_path = "/content/drive/MyDrive/CapstoneProjectHactiv8/job_dataset.csv"
    return pd.read_csv(data_path)

df = load_data()

# ======================================
# 3. Inisialisasi LLM
# ======================================
llm = Replicate(
    model="ibm-granite/granite-3.3-8b-instruct",
    replicate_api_token=replicate_token,
    model_kwargs={
        "temperature": 0.2,
        "max_new_tokens": 300,
        "min_new_tokens": 50,
        "top_p": 0.9,
        "top_k": 50,
    },
)

# ======================================
# 4. Buat Pandas Agent
# ======================================
agent = create_pandas_dataframe_agent(
    llm=llm,
    df=df,
    verbose=True,
    allow_dangerous_code=True
)

# ======================================
# 5. Streamlit UI
# ======================================
st.title("üíº Job Insights dengan Granite + Pandas Agent")
st.write("Tanyakan pertanyaan seputar lowongan kerja, contoh: "
         "*berapa banyak postingan job di bidang digital marketing pada tahun 2022?*")

query = st.text_input("Pertanyaan:")

if st.button("Tanyakan"):
    with st.spinner("Granite sedang menganalisis data..."):
        try:
            response = agent.run(query)
            st.success("Jawaban Granite + Pandas Agent:")
            st.write(response)
        except Exception as e:
            st.error(f"Terjadi error: {e}")

# ======================================
# 6. Opsional: tampilkan data
# ======================================
with st.expander("üìä Lihat data awal"):
    pd.set_option("display.max_columns", None)
    st.dataframe(df.head())